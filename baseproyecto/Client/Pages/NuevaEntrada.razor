@page "/nuevaentrada"
@page "/nueventrada/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegadorentrada;

<h3>@letrero Registro</h3>

<EditForm Model="laentrada" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombreentrada" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="txtNombreentrada" class="form-control" @bind-Value="laentrada.Nombreentrada" />
            <ValidationMessage For="()=>laentrada.Nombreentrada" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCantidadentrada" class="col-sm-2 col-form-label">Cantidad</label>
        <div class="col-sm-10">
            <InputNumber id="txtCantidadentrada" class="form-control" @bind-Value="laentrada.Cantidadentrada" />
            <ValidationMessage For="()=>laentrada.Cantidadentrada" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtFechaentrada" class="col-sm-2 col-form-label">Fecha de Caducidad</label>
        <div class="col-sm-10">
            <InputDate id="txtFechaentrada" class="form-control" @bind-Value="laentrada.Fechaentrada" />
            <ValidationMessage For="()=>laentrada.Fechaentrada" />
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private Entradas laentrada = new();
    private string letrero = "Nueva";

    protected override async Task OnParametersSetAsync()
    {
        if (Id == 0)
        {
            letrero = "Nueva";
            laentrada = new();
        }
        else
        {
            letrero = "Modificar";
            laentrada = await _http.GetFromJsonAsync<Entrada>($"api/entradas/{Id}");
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            await _http.PostAsJsonAsync<Entrada>("api/entradas", laentrada);
        }
        else
        {
            await _http.PutAsJsonAsync<Entrada>($"api/entradas/{Id}", laentrada);
        }
        _navegadorentrada.NavigateTo("/entradas");
    }

    private void Cancelar()
    {
        _navegadorentrada.NavigateTo("/entradas");
    }
}