@page "/nuevoregistro"
@page "/nuevoregistro/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegadordespensa;

<h3>@letrero Registro</h3>

<EditForm Model="elalimento" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="elalimento.Nombredespensa" />
            <ValidationMessage For="()=>elalimento.Nombredespensa" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCantidad" class="col-sm-2 col-form-label">Cantidad</label>
        <div class="col-sm-10">
            <InputNumber id="txtCantidad" class="form-control" @bind-Value="elalimento.Cantidaddespensa" />
            <ValidationMessage For="()=>elalimento.Cantidaddespensa" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtFecha" class="col-sm-2 col-form-label">Fecha de Caducidad</label>
        <div class="col-sm-10">
            <InputDate id="txtFecha" class="form-control" @bind-Value="elalimento.Fechacaducidad" />
            <ValidationMessage For="()=>elalimento.Fechacaducidad" />
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private Alimentos elalimento = new();
    private string letrero = "Nueva";

    protected override async Task OnParametersSetAsync()
    {
        if (Id == 0)
        {
            letrero = "Nueva";
            elalimento = new();
        }
        else
        {
            letrero = "Modificar";
            elalimento = await _http.GetFromJsonAsync<Alimentos>($"api/alimentos/{Id}");
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            await _http.PostAsJsonAsync<Alimentos>("api/alimentos", elalimento);
        }
        else
        {
            await _http.PutAsJsonAsync<Alimentos>($"api/alimentos/{Id}", elalimento);
        }
        _navegadordespensa.NavigateTo("/despensas");
    }

    private void Cancelar()
    {
        _navegadordespensa.NavigateTo("/despensas");
    }
}