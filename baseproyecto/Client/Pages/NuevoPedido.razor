@page "/nuevopedido"
@page "/nuevopedido/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegadorpedido;

<h3>@letrero Registro</h3>

<EditForm Model="elpedido" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombrepedido" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="txtNombrepedido" class="form-control" @bind-Value="elpedido.Nombrepedido" />
            <ValidationMessage For="()=>elpedido.Nombrepedido" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCantidadpedido" class="col-sm-2 col-form-label">Cantidad</label>
        <div class="col-sm-10">
            <InputNumber id="txtCantidadpedido" class="form-control" @bind-Value="elpedido.Cantidadpedido" />
            <ValidationMessage For="()=>elpedido.Cantidadpedido" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtFechapedido" class="col-sm-2 col-form-label">Fecha de Caducidad</label>
        <div class="col-sm-10">
            <InputDate id="txtFechapedido" class="form-control" @bind-Value="elpedido.Fechapedido" />
            <ValidationMessage For="()=>laentrada.Fechapedido" />
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private Pedidos elpedido = new();
    private string letrero = "Nueva";

    protected override async Task OnParametersSetAsync()
    {
        if (Id == 0)
        {
            letrero = "Nueva";
            elpedido = new();
        }
        else
        {
            letrero = "Modificar";
            elpedido = await _http.GetFromJsonAsync<Pedido>($"api/pedidos/{Id}");
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            await _http.PostAsJsonAsync<Pedido>("api/pedidos", elpedido);
        }
        else
        {
            await _http.PutAsJsonAsync<Pedido>($"api/pedidos/{Id}", elpedido);
        }
        _navegadorentrada.NavigateTo("/pedidos");
    }

    private void Cancelar()
    {
        _navegadorentrada.NavigateTo("/pedidos");
    }
}